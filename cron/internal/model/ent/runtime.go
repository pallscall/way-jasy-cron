// Code generated by entc, DO NOT EDIT.

package ent

import (
	"way-jasy-cron/cron/internal/model/ent/job"
	"way-jasy-cron/cron/internal/model/ent/machine"
	"way-jasy-cron/cron/internal/model/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	jobFields := schema.Job{}.Fields()
	_ = jobFields
	// jobDescName is the schema descriptor for name field.
	jobDescName := jobFields[1].Descriptor()
	// job.DefaultName holds the default value on creation for the name field.
	job.DefaultName = jobDescName.Default.(string)
	// jobDescCreator is the schema descriptor for creator field.
	jobDescCreator := jobFields[2].Descriptor()
	// job.DefaultCreator holds the default value on creation for the creator field.
	job.DefaultCreator = jobDescCreator.Default.(string)
	// jobDescURL is the schema descriptor for url field.
	jobDescURL := jobFields[3].Descriptor()
	// job.DefaultURL holds the default value on creation for the url field.
	job.DefaultURL = jobDescURL.Default.(string)
	// jobDescSpec is the schema descriptor for spec field.
	jobDescSpec := jobFields[4].Descriptor()
	// job.DefaultSpec holds the default value on creation for the spec field.
	job.DefaultSpec = jobDescSpec.Default.(string)
	// jobDescComment is the schema descriptor for comment field.
	jobDescComment := jobFields[5].Descriptor()
	// job.DefaultComment holds the default value on creation for the comment field.
	job.DefaultComment = jobDescComment.Default.(string)
	// jobDescUpdater is the schema descriptor for updater field.
	jobDescUpdater := jobFields[6].Descriptor()
	// job.DefaultUpdater holds the default value on creation for the updater field.
	job.DefaultUpdater = jobDescUpdater.Default.(string)
	// jobDescMethod is the schema descriptor for method field.
	jobDescMethod := jobFields[7].Descriptor()
	// job.DefaultMethod holds the default value on creation for the method field.
	job.DefaultMethod = jobDescMethod.Default.(string)
	// jobDescBody is the schema descriptor for body field.
	jobDescBody := jobFields[8].Descriptor()
	// job.DefaultBody holds the default value on creation for the body field.
	job.DefaultBody = jobDescBody.Default.(string)
	// jobDescHeader is the schema descriptor for header field.
	jobDescHeader := jobFields[9].Descriptor()
	// job.DefaultHeader holds the default value on creation for the header field.
	job.DefaultHeader = jobDescHeader.Default.(string)
	// jobDescCount is the schema descriptor for count field.
	jobDescCount := jobFields[10].Descriptor()
	// job.DefaultCount holds the default value on creation for the count field.
	job.DefaultCount = jobDescCount.Default.(int)
	// jobDescRetry is the schema descriptor for retry field.
	jobDescRetry := jobFields[11].Descriptor()
	// job.DefaultRetry holds the default value on creation for the retry field.
	job.DefaultRetry = jobDescRetry.Default.(int)
	// jobDescRetryTemp is the schema descriptor for retry_temp field.
	jobDescRetryTemp := jobFields[12].Descriptor()
	// job.DefaultRetryTemp holds the default value on creation for the retry_temp field.
	job.DefaultRetryTemp = jobDescRetryTemp.Default.(int)
	// jobDescStatus is the schema descriptor for status field.
	jobDescStatus := jobFields[13].Descriptor()
	// job.DefaultStatus holds the default value on creation for the status field.
	job.DefaultStatus = jobDescStatus.Default.(int)
	// jobDescID is the schema descriptor for id field.
	jobDescID := jobFields[0].Descriptor()
	// job.IDValidator is a validator for the "id" field. It is called by the builders before save.
	job.IDValidator = jobDescID.Validators[0].(func(int) error)
	machineFields := schema.Machine{}.Fields()
	_ = machineFields
	// machineDescHost is the schema descriptor for host field.
	machineDescHost := machineFields[1].Descriptor()
	// machine.DefaultHost holds the default value on creation for the host field.
	machine.DefaultHost = machineDescHost.Default.(string)
	// machineDescPort is the schema descriptor for port field.
	machineDescPort := machineFields[2].Descriptor()
	// machine.DefaultPort holds the default value on creation for the port field.
	machine.DefaultPort = machineDescPort.Default.(int)
	// machineDescUsername is the schema descriptor for username field.
	machineDescUsername := machineFields[3].Descriptor()
	// machine.DefaultUsername holds the default value on creation for the username field.
	machine.DefaultUsername = machineDescUsername.Default.(string)
	// machineDescPassword is the schema descriptor for password field.
	machineDescPassword := machineFields[4].Descriptor()
	// machine.DefaultPassword holds the default value on creation for the password field.
	machine.DefaultPassword = machineDescPassword.Default.(string)
	// machineDescComment is the schema descriptor for comment field.
	machineDescComment := machineFields[5].Descriptor()
	// machine.DefaultComment holds the default value on creation for the comment field.
	machine.DefaultComment = machineDescComment.Default.(string)
	// machineDescCommand is the schema descriptor for command field.
	machineDescCommand := machineFields[6].Descriptor()
	// machine.DefaultCommand holds the default value on creation for the command field.
	machine.DefaultCommand = machineDescCommand.Default.(string)
	// machineDescCreator is the schema descriptor for creator field.
	machineDescCreator := machineFields[7].Descriptor()
	// machine.DefaultCreator holds the default value on creation for the creator field.
	machine.DefaultCreator = machineDescCreator.Default.(string)
	// machineDescStatus is the schema descriptor for status field.
	machineDescStatus := machineFields[8].Descriptor()
	// machine.DefaultStatus holds the default value on creation for the status field.
	machine.DefaultStatus = machineDescStatus.Default.(int)
	// machineDescID is the schema descriptor for id field.
	machineDescID := machineFields[0].Descriptor()
	// machine.IDValidator is a validator for the "id" field. It is called by the builders before save.
	machine.IDValidator = machineDescID.Validators[0].(func(int) error)
}
