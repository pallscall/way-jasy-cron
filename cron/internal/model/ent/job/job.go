// Code generated by entc, DO NOT EDIT.

package job

const (
	// Label holds the string label denoting the job type in the database.
	Label = "job"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldSpec holds the string denoting the spec field in the database.
	FieldSpec = "spec"
	// FieldComment holds the string denoting the comment field in the database.
	FieldComment = "comment"
	// FieldUpdater holds the string denoting the updater field in the database.
	FieldUpdater = "updater"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldHeader holds the string denoting the header field in the database.
	FieldHeader = "header"
	// FieldStoppable holds the string denoting the stoppable field in the database.
	FieldStoppable = "stoppable"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCtime holds the string denoting the ctime field in the database.
	FieldCtime = "ctime"
	// FieldMtime holds the string denoting the mtime field in the database.
	FieldMtime = "mtime"

	// Table holds the table name of the job in the database.
	Table = "jobs"
)

// Columns holds all SQL columns for job fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreator,
	FieldURL,
	FieldSpec,
	FieldComment,
	FieldUpdater,
	FieldMethod,
	FieldBody,
	FieldHeader,
	FieldStoppable,
	FieldStatus,
	FieldCtime,
	FieldMtime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultCreator holds the default value on creation for the "creator" field.
	DefaultCreator string
	// DefaultURL holds the default value on creation for the "url" field.
	DefaultURL string
	// DefaultSpec holds the default value on creation for the "spec" field.
	DefaultSpec string
	// DefaultComment holds the default value on creation for the "comment" field.
	DefaultComment string
	// DefaultUpdater holds the default value on creation for the "updater" field.
	DefaultUpdater string
	// DefaultMethod holds the default value on creation for the "method" field.
	DefaultMethod string
	// DefaultBody holds the default value on creation for the "body" field.
	DefaultBody string
	// DefaultHeader holds the default value on creation for the "header" field.
	DefaultHeader string
	// DefaultStoppable holds the default value on creation for the "stoppable" field.
	DefaultStoppable int
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(int) error
)
