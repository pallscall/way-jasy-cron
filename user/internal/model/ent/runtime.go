// Code generated by entc, DO NOT EDIT.

package ent

import (
	"way-jasy-cron/user/internal/model/ent/schema"
	"way-jasy-cron/user/internal/model/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.DefaultUsername holds the default value on creation for the username field.
	user.DefaultUsername = userDescUsername.Default.(string)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.DefaultPassword holds the default value on creation for the password field.
	user.DefaultPassword = userDescPassword.Default.(string)
	// userDescTel is the schema descriptor for tel field.
	userDescTel := userFields[3].Descriptor()
	// user.DefaultTel holds the default value on creation for the tel field.
	user.DefaultTel = userDescTel.Default.(string)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[4].Descriptor()
	// user.DefaultEmail holds the default value on creation for the email field.
	user.DefaultEmail = userDescEmail.Default.(string)
	// userDescPublicKey is the schema descriptor for public_key field.
	userDescPublicKey := userFields[5].Descriptor()
	// user.DefaultPublicKey holds the default value on creation for the public_key field.
	user.DefaultPublicKey = userDescPublicKey.Default.(string)
	// userDescPrivateKey is the schema descriptor for private_key field.
	userDescPrivateKey := userFields[6].Descriptor()
	// user.DefaultPrivateKey holds the default value on creation for the private_key field.
	user.DefaultPrivateKey = userDescPrivateKey.Default.(string)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(int) error)
}
